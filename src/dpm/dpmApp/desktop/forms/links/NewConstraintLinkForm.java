/*
 * NewConstraintLinkForm.java
 *
 * Created on Sept 16, 2004
 */

package dpm.dpmApp.desktop.forms.links;

import dpm.content.DesignEntity;
import dpm.dpmApp.desktop.DpmAppTopFrame;
import dpm.dpmApp.desktop.forms.LinkForm;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashSet;
import java.util.Set;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import net.jxta.peergroup.PeerGroup;


/**
 *
 * @author  cumming
 */
public class NewConstraintLinkForm extends LinkForm {
    
    /** Creates new form NewLinkForm */
    public NewConstraintLinkForm(PeerGroup parentPG, DpmAppTopFrame topFrame) {
        super(parentPG, topFrame);
        
        initComponents();
        this.sourcePage = addTreePage(sourcePanel, parentPG, ENTITIES);
        this.targetPage = addTreePage(targetPanel, parentPG, ENTITIES);
        this.sourceTree = sourcePage.getTree();
        this.targetTree = targetPage.getTree();
        
        addSourceTreeListener();
        addTargetTreeListener();
        setSourceStateComboModel(sourcePage.getFirstDesignEntity());
        setTargetTransComboModel(targetPage.getFirstDesignEntity());
        
        linkTypeLabel.setText("Link Type: " + DO_BEFORE);
        topFrame.setPosition(this.getWidth(), this.getHeight(), this);
        pack();
        show();
    }
    
    /**When a source tree node is pressed */
    public void addSourceTreeListener() {
        sourceTree.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent evt) {
                // Add your handling code here:
                setSourceStateComboModel(sourcePage.getSelectedDesignEntity());
            }
        });
    }
    
    /**When a target tree node is pressed */
    public void addTargetTreeListener() {
        targetTree.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent evt) {
                // Add your handling code here:
                //System.out.println("target tree pressed");
                setTargetTransComboModel(targetPage.getSelectedDesignEntity());
            }
        });
    }
    
    public void setSourceStateComboModel(DesignEntity selEntity) {
        if(selEntity != null) {
            Set allStates = selEntity.getLoopNetAdv().getStates();
            sourceStateComboBox.setModel(new DefaultComboBoxModel(new Vector(allStates)));
        }
        /**Else, nothing has been selected */
        else {
            Set emptySet = new HashSet();
            sourceStateComboBox.setModel(new DefaultComboBoxModel(new Vector(emptySet)));
        }
        pack();
    }
    
    public void setTargetTransComboModel(DesignEntity selEntity) {
        /** Gets all the appropriate transition names */
        if(selEntity != null) {
            Set allTrans = selEntity.getLoopNetAdv().getTransitions();
            targetTransComboBox.setModel(new DefaultComboBoxModel(new Vector(allTrans)));
        }
        /**Else, nothing has been selected */
        else {
            Set emptySet = new HashSet();
            targetTransComboBox.setModel(new DefaultComboBoxModel(new Vector(emptySet)));
        }
        pack();
    }
    
    public String getSourceState() {
        String sourceState = (String)sourceStateComboBox.getSelectedItem();
        if(sourceState == null) {
            topFrame.showErrorDialog("Please select a state", this);
            return null;
        }
        return sourceState;
    }
    
    public String getTargetTransition() {
        String targetTrans = (String)targetTransComboBox.getSelectedItem();
        if(targetTrans == null) {
            topFrame.showErrorDialog("Please select a transition", this);
            return null;
        }
        return targetTrans;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        sourcePanel = new javax.swing.JPanel();
        buttonsPanel = new javax.swing.JPanel();
        linkTypeLabel = new javax.swing.JLabel();
        sourceStateLabel = new javax.swing.JLabel();
        sourceStateComboBox = new javax.swing.JComboBox();
        targetTransLabel = new javax.swing.JLabel();
        targetTransComboBox = new javax.swing.JComboBox();
        cancelButton = new javax.swing.JButton();
        linkSourceToTargetButton = new javax.swing.JButton();
        targetPanel = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Constraint Link Form");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        sourcePanel.setBorder(new javax.swing.border.TitledBorder(null, "Select Source", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        getContentPane().add(sourcePanel, new java.awt.GridBagConstraints());

        buttonsPanel.setLayout(new java.awt.GridBagLayout());

        linkTypeLabel.setFont(new java.awt.Font("Arial", 1, 12));
        linkTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkTypeLabel.setText("Label set in code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        buttonsPanel.add(linkTypeLabel, gridBagConstraints);

        sourceStateLabel.setFont(new java.awt.Font("Arial", 1, 12));
        sourceStateLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sourceStateLabel.setText("Source must be in State");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 5, 0);
        buttonsPanel.add(sourceStateLabel, gridBagConstraints);

        sourceStateComboBox.setBackground(new java.awt.Color(255, 255, 255));
        sourceStateComboBox.setFont(new java.awt.Font("Arial", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        buttonsPanel.add(sourceStateComboBox, gridBagConstraints);

        targetTransLabel.setFont(new java.awt.Font("Arial", 1, 12));
        targetTransLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        targetTransLabel.setText("To Enable Target Transition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        buttonsPanel.add(targetTransLabel, gridBagConstraints);

        targetTransComboBox.setBackground(new java.awt.Color(255, 255, 255));
        targetTransComboBox.setFont(new java.awt.Font("Arial", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        buttonsPanel.add(targetTransComboBox, gridBagConstraints);

        cancelButton.setFont(new java.awt.Font("Arial", 1, 12));
        cancelButton.setText("Cancel / Close Window");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        buttonsPanel.add(cancelButton, gridBagConstraints);

        linkSourceToTargetButton.setFont(new java.awt.Font("Arial", 1, 12));
        linkSourceToTargetButton.setText("Link Source > Target");
        linkSourceToTargetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkSourceToTargetButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        buttonsPanel.add(linkSourceToTargetButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(buttonsPanel, gridBagConstraints);

        targetPanel.setBorder(new javax.swing.border.TitledBorder(null, "Select Target", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        getContentPane().add(targetPanel, new java.awt.GridBagConstraints());

        pack();
    }//GEN-END:initComponents
    
    
    
    private void linkSourceToTargetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkSourceToTargetButtonActionPerformed
        // Add your handling code here:
        DesignEntity sourceEntity = getSelectedEntity(sourcePage);
        DesignEntity targetEntity = getSelectedEntity(targetPage);
        
        PeerGroup sourcePG = getParentPG(sourcePage);
        PeerGroup targetPG = getParentPG(targetPage);
        
        String sourceState = getSourceState();
        String targetTrans = getTargetTransition();
        
        try {
            /***/
            if(sourceTargetOK(sourceEntity, targetEntity)) {
                /** Creates a linkAdv and publishes it [locally] in the parentPG */
                advUtils.createLinkAdvertisement
                (sourceEntity, targetEntity, DO_BEFORE, sourceState, targetTrans, sourcePG, targetPG);
                topFrame.refreshTreeWithNodeSelected();
                //this.dispose();
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_linkSourceToTargetButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        this.dispose();
    }//GEN-LAST:event_exitForm
    
    /** Getter for property topFrame.
     * @return Value of property topFrame.
     *
     */
    public dpm.dpmApp.desktop.DpmAppTopFrame getTopFrame() {
        return topFrame;
    }
    
    /** Setter for property topFrame.
     * @param topFrame New value of property topFrame.
     *
     */
    public void setTopFrame(dpm.dpmApp.desktop.DpmAppTopFrame topFrame) {
        this.topFrame = topFrame;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton linkSourceToTargetButton;
    private javax.swing.JLabel linkTypeLabel;
    private javax.swing.JPanel sourcePanel;
    private javax.swing.JComboBox sourceStateComboBox;
    private javax.swing.JLabel sourceStateLabel;
    private javax.swing.JPanel targetPanel;
    private javax.swing.JComboBox targetTransComboBox;
    private javax.swing.JLabel targetTransLabel;
    // End of variables declaration//GEN-END:variables
    
    
}
