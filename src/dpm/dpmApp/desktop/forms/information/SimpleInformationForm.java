/*
 * SimpleInformationForm.java
 *
 * Created on October 8, 2004, 9:22 AM
 */

package dpm.dpmApp.desktop.forms.information;

import dpm.dpmApp.desktop.DpmAppTopFrame;
import javax.swing.text.*;
import javax.swing.JTextPane;
import dpm.dpmApp.desktop.*;
import dpm.dpmApp.desktop.forms.*;


/**
 *
 * @author  cumming
 */
public class SimpleInformationForm extends InformationForm {
    
    /** Creates new form SimpleInformationForm */
    public SimpleInformationForm(DpmAppTopFrame topFrame) {
        super(topFrame);
        initComponents();
        textPane.setBackground(INFO_DISPLAY_COLOR);
    }
    
     /**Creates a plain message */
    public void setSimpleMessage(String title, String header, String content) {
        setTitle(title);
        createOneRegularFrame(header, content);
        pack();
        topFrame.setPosition(this.getWidth(), this.getHeight(), this);
        show();
    }
    
     public void createOneRegularFrame(String header, String content) {
        StyledDocument doc = new JTextPane().getStyledDocument();
        addStylesToDocument(doc);
        doc = insert(header, doc, BOLD);
        doc = insert(NEWLINE, doc, REGULAR);
        doc = insert(NEWLINE, doc, REGULAR);
        doc = insert(content, doc, REGULAR);
        textPane.setStyledDocument(doc);
    }
    
    public void addPetriNetMessage() {
        String title = "About making petri nets";
        String header =  "Petri net loops converted into a NetAdvertisements" + NEWLINE +
        "must have the following characteristics";
        
        String content =
        "1. Places (the round elements) only connect to Transitions (the rectangular elements),"  + NEWLINE +
        "and vice versa. This constraint comes from the basic definition of petri nets."  + NEWLINE +
        NEWLINE +
        "2. The first place must have the prefix: '0.', for example: '0.In_pre_design_phase'"  + NEWLINE +
        NEWLINE +
        "3. the first transition also must have the prefix: '0.'"  + NEWLINE +
        NEWLINE +
        "4. After the transition name, there must be a description of the transition, separated by '=',"  + NEWLINE +
        "for example: '1.agreeToPerform=this product should be developed in detail'"  + NEWLINE +
        NEWLINE +
        "5. All states and transitions must follow this pattern, and be numbered consecutively" + NEWLINE +
        NEWLINE +
        "For further information please contact Michael Cumming"  + NEWLINE +
        "Email: m.cumming@bk.tudelft.nl";
        
        setSimpleMessage(title, header, content);
    }
    
    public void addDpmMessage() {
        String title = "About this application";
        String header = APP_NAME + " Version " + VERSION + " October 2004";
        
        String content =
        topFrame.getUserDirDescription() + NEWLINE +
        NEWLINE +
        "All Rights Reserved 2004" + NEWLINE +
        "Michael Cumming &" + NEWLINE +
        "Carnegie Mellon University" + NEWLINE +
        "School of Architecture. Pittsburgh, USA" + NEWLINE +
        "(http://www.arc.cmu.edu/cmu/index.jsp) &" + NEWLINE +
        "TU Delft, Faculteit Bouwkunde, Delft, NL" + NEWLINE +
        "(http://www.bk.tudelft.nl/bt/)" + NEWLINE +
        NEWLINE +
        "This product includes software developed by" + NEWLINE +
        "Sun Microsystems, Inc. for Project JXTA" + NEWLINE +
        "(http://www.jxta.org/)" + NEWLINE +
        NEWLINE +
        "It also includes software developed by the" + NEWLINE +
        "Renew Petri Net Project at the Theoretical Foundations Group," + NEWLINE +
        "Department of Informatics, University of Hamburg, Germany" + NEWLINE +
        "(http://www.informatik.uni-hamburg.de/TGI/renew/)" + NEWLINE +
        NEWLINE +
        "It also includes software developed by TouchGraph LLC" + NEWLINE +
        "(http://www.touchgraph.com/)";
        
        setSimpleMessage(title, header, content);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        infoPanel = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        infoPanel.setLayout(new java.awt.GridBagLayout());

        scrollPane.setBackground(new java.awt.Color(255, 255, 255));
        scrollPane.setBorder(null);
        scrollPane.setFocusable(false);
        scrollPane.setFont(new java.awt.Font("Arial", 0, 12));
        scrollPane.setMaximumSize(new java.awt.Dimension(400, 400));
        scrollPane.setPreferredSize(new java.awt.Dimension(400, 350));
        scrollPane.setAutoscrolls(true);
        textPane.setBackground(new java.awt.Color(204, 255, 204));
        textPane.setBorder(null);
        textPane.setEditable(false);
        textPane.setFont(new java.awt.Font("Arial", 0, 12));
        scrollPane.setViewportView(textPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoPanel.add(scrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(infoPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        okButton.setFont(new java.awt.Font("Arial", 1, 12));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        dispose();
    }//GEN-LAST:event_exitForm
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
    
}
